trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Container registry information
  containerRegistry: 'MyContainer23Registry'
  containerRepository: 'SW_Assignment1'
  containerTag: '$(Build.BuildId)'
  containerImageName: '$(containerRegistry)/$(containerRepository):$(containerTag)'
  # ACI information
  aciResourceGroup: 'MyResourceGroup'
  aciName: 'mycontainerinstance'
  aciRegion: 'West US'

steps:
- task: Docker@2
  inputs:
    containerRegistry: '$(containerRegistry)'
    repository: '$(containerRepository)'
    command: 'build'
    Dockerfile: '**/Dockerfile'
    tags: |
      $(containerTag)
      latest
  displayName: 'Build Docker image'

- task: Docker@2
  inputs:
    containerRegistry: '$(containerRegistry)'
    repository: '$(containerRepository)'
    command: 'push'
    tags: |
      $(containerTag)
      latest
  displayName: 'Push Docker image'

- script: |
     python -m venv env
     source env/bin/activate
     /usr/bin/python -m pip install --upgrade pip
     /usr/bin/python -m pip install -r requirements.txt
     /usr/bin/python -m pip install pytest
  displayName: 'Install dependencies'

- task: Bash@3
  inputs:
    targettype: 'inline'
    script: 'pytest -v automated_test.py --junitxml=test_results.xml'
  displayName: 'Run acceptance tests'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/test_results.xml'
    failTaskOnFailedTests: true
  displayName: 'Publish acceptance test results'

- task: AzureCLI@2
  inputs:
    azureSubscription: 'MyServiceConnection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az container start --resource-group $(aciResourceGroup) --name $(aciName)
  displayName: 'Start Azure Container Instance'